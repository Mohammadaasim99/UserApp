import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';
import { User } from '../../../../core/models/user.model';
import { FormGroup, FormBuilder, Validators } from '@angular/forms';
import { CountryService } from '../../../../core/services/country.service';
import { DateUtil } from '../../../../core/utils/date.utils';

@Component({
  selector: 'app-user-form',
  standalone: false,
  templateUrl: './user-form.component.html',
  styleUrl: './user-form.component.scss'
})
export class UserFormComponent implements OnInit {
  @Input() user: User | null = null;
  @Input() isEditMode = false;
  @Output() formSubmit = new EventEmitter<User>();
  @Output() cancel = new EventEmitter<void>();

  userForm: FormGroup;
  countries: string[] = [];

  constructor(
    private fb: FormBuilder,
    private countryService: CountryService,
    public dateService: DateUtil
  ) {
    this.userForm = this.fb.group({
      firstName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],
      lastName: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(50)]],
      email: ['', [Validators.required, Validators.email]],
      country: ['', Validators.required]
    });
  }

  ngOnInit(): void {
    this.loadCountries();

    if (this.user) {
      this.userForm.patchValue({
        firstName: this.user.firstName,
        lastName: this.user.lastName,
        email: this.isEditMode ? {value: this.user.email, disabled: true} : this.user.email,
        country: this.user.country
      });
    }
  }

  loadCountries(): void {
    this.countryService.getCountries().subscribe((countries:any) => {
      this.countries = countries;
    });
  }

  onSubmit(): void {
    if (this.userForm.valid) {
      const formValue = this.userForm.getRawValue(); // Gets values including disabled fields
      const userData: User = {
        ...formValue,
        id: this.user?.id || '', // Will be generated by service if empty
        createdAt: this.user?.createdAt || new Date().toISOString()
      };
      this.formSubmit.emit(userData);
    }
  }

  onCancel(): void {
    this.cancel.emit();
  }

  get firstName() { return this.userForm.get('firstName'); }
  get lastName() { return this.userForm.get('lastName'); }
  get email() { return this.userForm.get('email'); }
  get country() { return this.userForm.get('country'); }
}